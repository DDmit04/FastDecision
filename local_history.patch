Index: src/test/java/hackaton/fastdisision/service/VoteOptionServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/hackaton/fastdisision/service/VoteOptionServiceTest.java	(date 1582882725909)
+++ src/test/java/hackaton/fastdisision/service/VoteOptionServiceTest.java	(date 1582882725909)
@@ -66,6 +66,7 @@
     @Test
     void acceptVote() throws WrongVotingKeyException {
         Mockito.when(voteOptionRepo.findById(firstVoteOption.getId())).thenReturn(Optional.of(firstVoteOption));
+        //twice
         voteOptionService.acceptVote(firstVoteOption.getId(), votedIp, rightVotingKey);
         voteOptionService.acceptVote(firstVoteOption.getId(), votedIp, rightVotingKey);
         assertTrue(inspectedVoting.getTotalVotes() == 1);
@@ -73,17 +74,6 @@
         assertTrue(firstVoteOption.getPluses() == 1);
     }
 
-    @Test
-    void acceptVoteTryTwice() throws WrongVotingKeyException {
-        //twice
-        Mockito.when(voteOptionRepo.findById(secVoteOption.getId())).thenReturn(Optional.of(secVoteOption));
-        voteOptionService.acceptVote(secVoteOption.getId(), votedIp, rightVotingKey);
-        voteOptionService.acceptVote(secVoteOption.getId(), votedIp, rightVotingKey);
-        assertTrue(inspectedVoting.getTotalVotes() == 1);
-        assertTrue(inspectedVoting.getVotedIps().contains(votedIp));
-        assertTrue(secVoteOption.getPluses() == 1);
-    }
-
     @Test
     void acceptVoteWrongKey() {
         Mockito.when(voteOptionRepo.findById(firstVoteOption.getId())).thenReturn(Optional.of(firstVoteOption));
